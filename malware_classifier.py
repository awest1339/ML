from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

from sklearn.model_selection import GridSearchCV

DATA_FILE = 'data/arff_backlog.arff.txt'


def main():
    with open(DATA_FILE, 'r') as file_:
        raw_data = file_.readlines()

    data_array = []
    label_array = []

    for line in raw_data:
        line = line.strip()
        if line and line[0].isdigit():
            data_point = line.split(',')
            class_ = data_point[-1]
            if 'good' in class_:
                label = 0
            else:
                label = 1
            x = data_point[:-1]
            num_x = [int(s) for s in x]
            data_array.append(num_x)
            label_array.append(label)

    X_train, X_test, y_train, y_test = train_test_split(
        data_array, label_array, random_state=0
    )

    param_grid = {
        'n_estimators': [1, 10, 100, 1000, 10000],
        'max_features': [1, 2, 3, 4, 5]
    }
    
    forest = RandomForestClassifier(n_estimators=1000, max_features=4, random_state=0)
    forest.fit(X_train, y_train)
    print('Performance of train data: {:.5f}'.format(forest.score(X_train, y_train)))
    print('Performance of test data: {:.5f}'.format(forest.score(X_test, y_test)))


if __name__ == '__main__':
    main()
